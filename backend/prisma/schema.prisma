// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Admin {
  id Int @id @default(autoincrement())
  pseudoNome String @unique
  senha String @unique

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_admin")
}

model Usuario {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(100)
  sobrenome String @db.VarChar(100)
  cpf String @unique  @db.VarChar(11)
  email String @db.VarChar(100)
  senha String @db.VarChar(100)

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_usuarios")
}

model Minha_Lista {
  id Int @id @default(autoincrement())
  nome String? @db.VarChar(100)
}

model Vinhos {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(100)
  tipo String @db.VarChar(50)
  uva String @db.VarChar(50)
 
  // Relacionamento entre Vinhos e Regiao
  regiao Regiao @relation("VinhosRegiao",)
}

model Pais {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(50)

  // Relacionamento entre País e Região
  regiao Regiao[] @relation("PaisRegiao")
  
}

model Regiao {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(50)

  // Relacionamento entre País e Região
  pais Pais @relation("PaisRegiao", fields: [idPais], references: [id])
  idPais Int

}

//   @@map("cadastro_vinhos")
// 

// model Lista_Vinhos {
//   id Int @id @default(autoincrement())
//   nome String @db.VarChar(100)
//   descricao String @db.Text
//   preco_medio Float
  
//   // Relacionamento minha_lista e lista_vinhos
//   minha_lista Minha_Lista @relation("ListaVinhos", fields: [idVinhos], references: [id])
//   idVinhos Int

//   @@map("registrar_vinhos")
// }

// model Avaliacao {
//   id Int @id @default(autoincrement())
//   nota Float?
//   favoritos Boolean?
//   comentarios String? @db.VarChar(500)

//   // Relacionamento minha_lista e Avaliação
//   vinhos Minha_Lista[] @relation("VinhosAvaliacao")
  
//   @@map("avaliacao")
// }